type ListingEntry {
  accommodates: Int
  amenities: [String]
  availability_30: Int
  availability_365: Int
  availability_60: Int
  availability_90: Int
  bathrooms: JSON
  bathrooms_text: String
  bedrooms: Int
  beds: Int
  calculated_host_listings_count: Int
  calculated_host_listings_count_entire_homes: Int
  calculated_host_listings_count_private_rooms: Int
  calculated_host_listings_count_shared_rooms: Int
  calendar_last_scraped: Date
  calendar_updated: JSON
  description: String
  first_review: Date
  has_availability: Boolean
  host_about: String
  host_acceptance_rate: String
  host_has_profile_pic: Boolean
  host_id: Int
  host_identity_verified: Boolean
  host_is_superhost: Boolean
  host_listings_count: Int
  host_location: String
  host_name: String
  host_neighbourhood: String
  host_picture_url: String
  host_response_rate: String
  host_response_time: String
  host_since: Date
  host_thumbnail_url: String
  host_total_listings_count: Int
  host_url: String
  host_verifications: String
  id: Int
  instant_bookable: Boolean
  last_review: Date
  last_scraped: Date
  latitude: Float
  license: String
  listing_url: String
  longitude: Float
  maximum_maximum_nights: Int
  maximum_minimum_nights: Int
  maximum_nights: Int
  maximum_nights_avg_ntm: Float
  minimum_maximum_nights: Int
  minimum_minimum_nights: Int
  minimum_nights: Int
  minimum_nights_avg_ntm: Float
  name: String
  neighborhood_overview: String
  neighbourhood: String
  neighbourhood_cleansed: String
  neighbourhood_group_cleansed: JSON
  number_of_reviews: Int
  number_of_reviews_l30d: Int
  number_of_reviews_ltm: Int
  picture_url: String
  price: String
  property_type: String
  review_scores_accuracy: Float
  review_scores_checkin: Float
  review_scores_cleanliness: Float
  review_scores_communication: Float
  review_scores_location: Float
  review_scores_rating: Float
  review_scores_value: Float
  reviews_per_month: Float
  room_type: String
  scrape_id: ID
}

type SearchEntry {
  id: Int
  name: String
  room_type: String
}

scalar InputgetAttributes

type Query {
  queryHarperDB(operation: String, sql: String): [ListingEntry]
    @rest(
      method: POST
      endpoint: "https://$instance"
      headers: [{ name: "authorization", value: "$authorization" }]
      configuration: "curl_import_config"
    )
  searchHarperDB(
    get_attributes: InputgetAttributes
    operation: String
    schema: String
    search_attribute: String
    search_value: String
    table: String
  ): [SearchEntry]
    @rest(
      method: POST
      endpoint: "https://$instance"
      headers: [{ name: "authorization", value: "$authorization" }]
      configuration: "curl_import_config"
    )
}
